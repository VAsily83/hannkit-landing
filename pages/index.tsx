import React, { useMemo, useState } from 'react';

export default function LandingHannkit() {
  // ---- –ü–∞–ª–∏—Ç—Ä–∞
  const COLORS = {
    primary: '#0B1E5B',        // —Ç—ë–º–Ω—ã–π —Ö–∏—Ä–æ
    accent: '#F3F4F6',         // —Å–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω —Å–µ–∫—Ü–∏–π
    text: '#111111',
    border: '#E5E7EB',
    white: '#FFFFFF',
  };

  // ---- –Ø–∑—ã–∫ (–æ—Å—Ç–∞–≤–ª—è–µ–º RU –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π)
  const [uiLang, setUiLang] = useState<'ru' | 'en' | 'zh'>('ru');
  const T = useMemo(
    () =>
      ({
        ru: {
          brand: 'Hannkit',
          langLabel: '–Ø–∑—ã–∫',
          heroTitle: '–ü—Ä–æ–¥–∞–≤–∞–π—Ç–µ –≤ –†–æ—Å—Å–∏–∏ –±–µ–∑ —Ä–∏—Å–∫–æ–≤ –∏ –≤–ª–æ–∂–µ–Ω–∏–π',
          heroLead:
            '–ú—ã —Ä–∞–∑–º–µ—â–∞–µ–º –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã –Ω–∞ Wildberries, Ozon –∏ –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç–µ, –±–µ—Ä—ë–º –Ω–∞ —Å–µ–±—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ª–æ–≥–∏—Å—Ç–∏–∫—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å + 30% –æ—Ç –ø—Ä–∏–±—ã–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏.',
          ctas: { partner: '–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º' },
          badges: ['Wildberries', 'Ozon', '–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç'],

          whyTitle: '–ü–æ—á–µ–º—É —ç—Ç–æ –≤—ã–≥–æ–¥–Ω–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é',
          why: [
            { title: '–ë—ã—Å—Ç—Ä—ã–π –≤—ã—Ö–æ–¥', text: '–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∂ –±–µ–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä' },
            { title: '–ú–∏–Ω–∏–º—É–º —Ä–∏—Å–∫–æ–≤', text: '–ú—ã –±–µ—Ä—ë–º –Ω–∞ —Å–µ–±—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ª–æ–≥–∏—Å—Ç–∏–∫—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É' },
            { title: '–†–æ—Å—Ç –ø—Ä–∏–±—ã–ª–∏', text: '–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å + 30% –æ—Ç –ø—Ä–∏–±—ã–ª–∏' },
          ],

          howTitle: '–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º',
          how: [
            '–ê–Ω–∞–ª–∏–∑ —Å–ø—Ä–æ—Å–∞ –∏ SKU',
            '–õ–µ–≥–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
            '–ü–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥',
            '–ü—Ä–æ–¥–∞–∂–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö',
            '–í—ã–ø–ª–∞—Ç—ã –∏ –æ—Ç—á—ë—Ç—ã',
          ],

          finTitle: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è',
          fin: [
            'COGS+30% ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ',
            '–í—ã–ø–ª–∞—Ç—ã —Ä–∞–∑ –≤ –º–µ—Å—è—Ü',
            '–í—Å–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ª–æ–≥–∏—Å—Ç–∏–∫—É –∑–∞ –Ω–∞–º–∏',
            '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
            'SLA –ø–æ —Å—Ä–æ–∫–∞–º –≤—ã–ø–ª–∞—Ç',
          ],

          trustTitle: '–ì–∞—Ä–∞–Ω—Ç–∏–∏ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å',
          trust: [
            { title: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è —á–∏—Å—Ç–æ—Ç–∞', text: '–†–∞–±–æ—Ç–∞–µ–º —Å —é—Ä–ª–∏—Ü–∞–º–∏, —Å–æ–±–ª—é–¥–∞–µ–º –≤—Å–µ –Ω–æ—Ä–º—ã' },
            { title: '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã', text: '–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' },
            { title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', text: '–û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤' },
          ],

          catsTitle: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ–º',
          cats: [
            '–ú–∞–ª–∞—è –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
            '–¢–æ–≤–∞—Ä—ã –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã –∏ –∑–¥–æ—Ä–æ–≤—å—è',
            '–î–æ–º, –∫—É—Ö–Ω—è, —É–±–æ—Ä–∫–∞',
            '–°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö',
            '–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
            '–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã',
          ],

          b2bTitle: 'B2B –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤',
          b2bLead: '–û–ø—Ç–æ–≤—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏ –∏ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö —Å–µ–ª–ª–µ—Ä–æ–≤.',
          b2b: [
            { title: '–û–ø—Ç–æ–≤—ã–µ –ø–∞—Ä—Ç–∏–∏', text: '–í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–∫—É–ø–∫–∏ –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –æ–±—ä—ë–º–∞.' },
            { title: 'White Label', text: '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –ø–æ–¥ –Ω–∞—à–∏–º –ª–µ–π–±–ª–æ–º –Ω–∞ –≤–∞—à–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ.' },
            { title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç—Ä–µ–Ω–¥–æ–≤', text: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ SKU –∏ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.' },
            { title: '–ì–æ—Ç–æ–≤–∞—è –ª–æ–≥–∏—Å—Ç–∏–∫–∞', text: '–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ —Å–∫–ª–∞–¥—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –±–µ–∑ –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∏—è.' },
          ],

          contactTitle: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏',
          contactLead: '–ü–æ–ª—É—á–∏—Ç–µ —Ä–∞—Å—á—ë—Ç —Å–ø—Ä–æ—Å–∞ –∏ —Ç–µ—Å—Ç–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É SKU –∑–∞ 48 —á–∞—Å–æ–≤.',
          email: 'Email',
          telegram: '–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram',
          wechat: 'WeChat',
          wechatHint: '–û—Ç–∫—Ä–æ–π—Ç–µ WeChat ‚Üí –ü–æ–∏—Å–∫ ‚Üí ID: HardVassya',

          modalTitle: '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É',
          name: '–í–∞—à–µ –∏–º—è',
          phone: '–¢–µ–ª–µ—Ñ–æ–Ω',
          submit: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
          close: '–ó–∞–∫—Ä—ã—Ç—å',

          footer: '¬© 2025 Hannkit ¬∑ hannkit.com. All rights reserved.',
        },
        // –î–ª—è EN/ZH –ø–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É—Å—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å.
        en: undefined,
        zh: undefined,
      } as const)[uiLang] || ({} as any),
    [uiLang]
  );

  // ---- –°–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ—Ä–º—ã
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [loading, setLoading] = useState(false);

  // ---- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –≤ Formspree
  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    if (loading) return;

    try {
      setLoading(true);
      const endpoint = process.env.NEXT_PUBLIC_FORMSPREE_ENDPOINT as string;
      if (!endpoint) throw new Error('Form endpoint is not configured');

      const res = await fetch(endpoint, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, email, phone }),
      });

      if (!res.ok) throw new Error('Submit failed');

      alert('–°–ø–∞—Å–∏–±–æ! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üöÄ');
      setIsModalOpen(false);
      setName('');
      setEmail('');
      setPhone('');
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    } finally {
      setLoading(false);
    }
  }

  // ---- –£—Ç–∏–ª–∏—Ç—ã —Å—Ç–∏–ª–µ–π
  const shell: React.CSSProperties = {
    fontFamily:
      "Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, 'Apple Color Emoji', 'Segoe UI Emoji'",
    color: COLORS.text,
    margin: 0,
  };
  const container: React.CSSProperties = { maxWidth: 1120, margin: '0 auto', padding: '0 20px' };
  const pill: React.CSSProperties = {
    display: 'inline-block',
    padding: '10px 16px',
    borderRadius: 999,
    border: `1px solid ${COLORS.border}`,
    background: COLORS.white,
  };
  const btnPrimary: React.CSSProperties = {
    padding: '12px 18px',
    borderRadius: 12,
    border: 'none',
    background: COLORS.primary,
    color: COLORS.white,
    fontWeight: 600,
    cursor: 'pointer',
  };

  return (
    <div style={shell}>
      {/* ---------------- Header ---------------- */}
      <div style={{ background: COLORS.primary, color: COLORS.white }}>
        <div style={{ ...container, display: 'flex', alignItems: 'center', gap: 16, height: 64 }}>
          <div style={{ fontWeight: 800 }}>Hannkit</div>

          <div style={{ marginLeft: 'auto', display: 'flex', gap: 8, alignItems: 'center' }}>
            <span style={{ opacity: 0.8 }}>{T.langLabel}</span>
            <button
              onClick={() => setUiLang('ru')}
              style={{ ...pill, background: COLORS.white, borderColor: 'transparent', fontWeight: 700 }}
            >
              RU
            </button>
            <button onClick={() => setUiLang('en')} style={{ ...pill, color: COLORS.white, background: 'transparent' }}>
              EN
            </button>
            <button onClick={() => setUiLang('zh')} style={{ ...pill, color: COLORS.white, background: 'transparent' }}>
              ZH
            </button>

            <button style={{ ...btnPrimary, background: COLORS.white, color: COLORS.primary }} onClick={() => setIsModalOpen(true)}>
              {T.ctas.partner}
            </button>
          </div>
        </div>
      </div>

      {/* ---------------- Hero ---------------- */}
      <section style={{ background: COLORS.primary, color: COLORS.white }}>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h1 style={{ fontSize: 48, lineHeight: 1.1, margin: 0, fontWeight: 800 }}>{T.heroTitle}</h1>
          <p style={{ marginTop: 16, opacity: 0.95, maxWidth: 760 }}>{T.heroLead}</p>

          <div style={{ marginTop: 20, display: 'flex', gap: 12, alignItems: 'center' }}>
            <button style={{ ...btnPrimary }} onClick={() => setIsModalOpen(true)}>
              {T.ctas.partner}
            </button>
            {T.badges.map((b, i) => (
              <span key={i} style={{ ...pill, background: 'rgba(255,255,255,0.08)', color: COLORS.white, borderColor: 'rgba(255,255,255,0.2)' }}>
                {b}
              </span>
            ))}
          </div>

          <div
            style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(3, minmax(0, 1fr))',
              gap: 16,
              marginTop: 28,
            }}
          >
            {T.why.map((card, i) => (
              <div
                key={i}
                style={{
                  background: 'rgba(255,255,255,0.06)',
                  border: '1px solid rgba(255,255,255,0.15)',
                  borderRadius: 16,
                  padding: 18,
                }}
              >
                <div style={{ fontWeight: 700 }}>{card.title}</div>
                <div style={{ opacity: 0.9, marginTop: 6 }}>{card.text}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* ---------------- Why (–ø–æ–¥—Ä–æ–±–Ω–æ) ---------------- */}
      <section style={{ background: COLORS.accent }}>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.whyTitle}</h2>

          <div
            style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(3, minmax(0, 1fr))',
              gap: 16,
              marginTop: 16,
            }}
          >
            {T.why.map((card, i) => (
              <div key={i} style={{ background: COLORS.white, border: `1px solid ${COLORS.border}`, borderRadius: 16, padding: 18 }}>
                <div style={{ fontWeight: 700 }}>{card.title}</div>
                <div style={{ marginTop: 6 }}>{card.text}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* ---------------- How ---------------- */}
      <section>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.howTitle}</h2>
          <ul style={{ marginTop: 12, lineHeight: 1.7 }}>
            {T.how.map((row, i) => (
              <li key={i}>{row}</li>
            ))}
          </ul>
        </div>
      </section>

      {/* ---------------- Financials ---------------- */}
      <section style={{ background: COLORS.accent }}>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.finTitle}</h2>
          <ul style={{ marginTop: 12, lineHeight: 1.7 }}>
            {T.fin.map((row, i) => (
              <li key={i}>{row}</li>
            ))}
          </ul>
        </div>
      </section>

      {/* ---------------- Trust ---------------- */}
      <section>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.trustTitle}</h2>

          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, minmax(0,1fr))', gap: 16, marginTop: 16 }}>
            {T.trust.map((card, i) => (
              <div key={i} style={{ background: COLORS.white, border: `1px solid ${COLORS.border}`, borderRadius: 16, padding: 18 }}>
                <div style={{ fontWeight: 700 }}>{card.title}</div>
                <div style={{ marginTop: 6 }}>{card.text}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* ---------------- Categories ---------------- */}
      <section style={{ background: COLORS.accent }}>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.catsTitle}</h2>
          <div style={{ marginTop: 12, display: 'flex', gap: 10, flexWrap: 'wrap' }}>
            {T.cats.map((c, i) => (
              <span key={i} style={pill}>
                {c}
              </span>
            ))}
          </div>
        </div>
      </section>

      {/* ---------------- B2B ---------------- */}
      <section>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.b2bTitle}</h2>
          <p style={{ marginTop: 8 }}>{T.b2bLead}</p>

          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, minmax(0,1fr))', gap: 16, marginTop: 16 }}>
            {T.b2b.map((b, i) => (
              <div key={i} style={{ background: COLORS.white, border: `1px solid ${COLORS.border}`, borderRadius: 16, padding: 18 }}>
                <div style={{ fontWeight: 700 }}>{b.title}</div>
                <div style={{ marginTop: 6 }}>{b.text}</div>
              </div>
            ))}
          </div>

          <button style={{ ...btnPrimary, marginTop: 16 }} onClick={() => setIsModalOpen(true)}>
            {T.ctas.partner}
          </button>
        </div>
      </section>

      {/* ---------------- Contacts ---------------- */}
      <section id="contact" style={{ background: COLORS.accent }}>
        <div style={{ ...container, paddingTop: 40, paddingBottom: 40 }}>
          <h2 style={{ margin: 0 }}>{T.contactTitle}</h2>
          <p style={{ marginTop: 8 }}>{T.contactLead}</p>

          <div
            style={{
              display: 'grid',
              gridTemplateColumns: '1fr 1fr',
              gap: 16,
              marginTop: 16,
            }}
          >
            <div style={{ background: COLORS.white, border: `1px solid ${COLORS.border}`, borderRadius: 16, padding: 18 }}>
              <div style={{ fontWeight: 700, marginBottom: 8 }}>{T.email}</div>
              <a href="mailto:Wildbizshop@gmail.com">Wildbizshop@gmail.com</a>
            </div>

            <div style={{ background: COLORS.white, border: `1px solid ${COLORS.border}`, borderRadius: 16, padding: 18 }}>
              <div style={{ fontWeight: 700, marginBottom: 8 }}>Telegram</div>
              <a href="https://t.me/HardVassya" target="_blank" rel="noopener noreferrer">
                @HardVassya ‚Äî –æ—Ç–∫—Ä—ã—Ç—å
              </a>
              <div style={{ marginTop: 10, opacity: 0.8 }}>
                WeChat: ID <b>HardVassya</b> <span style={{ opacity: 0.7 }}>({T.wechatHint})</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* ---------------- Footer ---------------- */}
      <footer>
        <div style={{ ...container, paddingTop: 24, paddingBottom: 24, color: '#6B7280' }}>{T.footer}</div>
      </footer>

      {/* ---------------- Modal (Formspree) ---------------- */}
      {isModalOpen && (
        <div
          style={{
            position: 'fixed',
            inset: 0,
            background: 'rgba(0,0,0,0.5)',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            padding: 20,
          }}
          onClick={() => setIsModalOpen(false)}
        >
          <div
            style={{ background: COLORS.white, width: 360, borderRadius: 12, padding: 20 }}
            onClick={(e) => e.stopPropagation()}
          >
            <h3 style={{ marginTop: 0 }}>{T.modalTitle}</h3>

            <form onSubmit={handleSubmit}>
              <div style={{ display: 'grid', gap: 10 }}>
                <input
                  placeholder={T.name}
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                  required
                  style={{
                    border: `1px solid ${COLORS.border}`,
                    borderRadius: 10,
                    padding: '10px 12px',
                  }}
                />
                <input
                  placeholder="Email"
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                  style={{
                    border: `1px solid ${COLORS.border}`,
                    borderRadius: 10,
                    padding: '10px 12px',
                  }}
                />
                <input
                  placeholder={T.phone}
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                  style={{
                    border: `1px solid ${COLORS.border}`,
                    borderRadius: 10,
                    padding: '10px 12px',
                  }}
                />
              </div>

              <div style={{ display: 'flex', gap: 10, marginTop: 14 }}>
                <button type="submit" disabled={loading} style={{ ...btnPrimary }}>
                  {loading ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º‚Ä¶' : T.submit}
                </button>
                <button
                  type="button"
                  onClick={() => setIsModalOpen(false)}
                  style={{ ...pill, borderColor: COLORS.border, background: COLORS.white }}
                >
                  {T.close}
                </button>
              </div>

              <div style={{ marginTop: 10, fontSize: 12, opacity: 0.7 }}>
                –ù–∞–∂–∏–º–∞—è ¬´{T.submit}¬ª, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
}
